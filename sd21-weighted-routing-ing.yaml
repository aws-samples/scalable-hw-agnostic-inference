apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sd21
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '10'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '9'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '10'
    alb.ingress.kubernetes.io/success-codes: '200-301'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/load-balancer-name: sd21
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=10
    alb.ingress.kubernetes.io/actions.weighted-routing: >
       {"type":"forward","forwardConfig":{"targetGroups":[{"serviceName":"sd21-a10g-cuda","servicePort":80,"weight":15},{"serviceName":"sd21-a10g-triton","servicePort":80,"weight":15},{"serviceName":"sd21-l4-triton","servicePort":80,"weight":10},{"serviceName":"sd21-inf2","servicePort":80,"weight":40},{"serviceName":"sd21-trn1","servicePort":80,"weight":20}],"targetGroupStickinessConfig":{"enabled":true,"durationSeconds":200}}}
  labels:          
    app: sd21-multicompute
spec:
  ingressClassName: alb
  rules:
     - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service: 
              name: weighted-routing
              port: 
                name: use-annotation
